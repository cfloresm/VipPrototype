
/*
 * 
 */

package com.verisign.schemas.vip._2011._04.vipuserservices.auth;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.2.3
 * Thu Jun 13 20:10:23 CDT 2013
 * Generated source version: 2.2.3
 * 
 */


@WebServiceClient(name = "AuthenticationService", 
                  wsdlLocation =  "classpath:vipuserservices-auth-1.1.wsdl",
                  targetNamespace = "http://schemas.verisign.com/vip/2011/04/vipuserservices/auth") 
public class AuthenticationService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://schemas.verisign.com/vip/2011/04/vipuserservices/auth", "AuthenticationService");
    public final static QName AuthenticationServicePort = new QName("http://schemas.verisign.com/vip/2011/04/vipuserservices/auth", "AuthenticationServicePort");
    static {
        URL url = null;
        try {
            url = new URL("vipuserservices-auth-1.1.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("vipuserservices-auth-1.1.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public AuthenticationService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AuthenticationService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AuthenticationService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns AuthenticationServicePort
     */
    @WebEndpoint(name = "AuthenticationServicePort")
    public AuthenticationServicePort getAuthenticationServicePort() {
        return super.getPort(AuthenticationServicePort, AuthenticationServicePort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuthenticationServicePort
     */
    @WebEndpoint(name = "AuthenticationServicePort")
    public AuthenticationServicePort getAuthenticationServicePort(WebServiceFeature... features) {
        return super.getPort(AuthenticationServicePort, AuthenticationServicePort.class, features);
    }

}
